// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String
  url         String    @unique
  source      String
  summary     String?
  content     String?
  tags        String[]  @default([])
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Optional normalized relation
  articleTags ArticleTag[]

  // Index for sorting by recency
  @@index([publishedAt(sort: Desc)])
}

model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  articleTags ArticleTag[]
}

// Explicit join model to support a normalized tag system (optional)
model ArticleTag {
  articleId Int
  tagId     Int

  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  tag     Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([articleId, tagId])
}
